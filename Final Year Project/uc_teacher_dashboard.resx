<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuTileButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kiRJT/Haa/8HkOd+aZB26zwAAAAASUVORK5CYII=
</value>
  </data>
</root>